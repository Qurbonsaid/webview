name: Build & Release Debug APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    permissions: write-all
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      - name: 🛎 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📦 Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: 🔨 Build Debug APK
        run: chmod +x gradlew && ./gradlew assembleDebug

      - name: 🏷 Get Version Name
        id: version
        run: echo "VERSION_NAME=$(./gradlew -q printVersionName)" >> $GITHUB_ENV

      - name: 📤 Upload Debug APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release Debug APK
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🛎 Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION_NAME }}-debug
          release_name: "Debug Build v${{ env.VERSION_NAME }}"
          body: "📦 New debug build available!"
          draft: false
          prerelease: false
          files: app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
